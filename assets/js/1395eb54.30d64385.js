"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[195],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(s,".").concat(d)]||m[d]||l[d]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9341:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(5443),o=(r(9496),r(9613));const i={id:6,sidebar_position:6,slug:"commit-query"},a="Commit Query",c={unversionedId:"usage/6",id:"usage/6",title:"Commit Query",description:"usePq relies on rerendering cycles to capture and commit fields that were accessed. If usePq is call in a parent component and passed down as a prop to a child, rerendering the child and not the parent will not trigger the commit. Invoking commitQuery forces a commit.",source:"@site/docs/usage/commit-query.md",sourceDirName:"usage",slug:"/usage/commit-query",permalink:"/pqrs/usage/commit-query",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"6",sidebar_position:6,slug:"commit-query"},sidebar:"sidebar",previous:{title:"Query Variables",permalink:"/pqrs/usage/query-variables"},next:{title:"Without Handler",permalink:"/pqrs/usage/without-handler"}},s={},u=[],p={toc:u};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"commit-query"},"Commit Query"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"usePq")," relies on rerendering cycles to capture and commit fields that were accessed. If ",(0,o.kt)("inlineCode",{parentName:"p"},"usePq")," is call in a parent component and passed down as a prop to a child, rerendering the child and not the parent will not trigger the commit. Invoking ",(0,o.kt)("inlineCode",{parentName:"p"},"commitQuery")," forces a commit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"function App() {\n  const [{ user }, _, { commitQuery }] = usePq(handler)\n\n  return <User user={user} commitQuery={commitQuery} />\n}\n\nexport function User({ user, commitQuery }) {\n  const [id, setId] = useState(1)\n\n  useEffect(commitQuery, [id])\n\n  return (\n    <div>\n      {isLoading ? <span>loading...</span> : <span>{user.$({ id }).name}</span>}\n      <button onClick={() => setId(i + 1)}>next</button>\n    </div>\n  )\n}\n")))}l.isMDXComponent=!0}}]);
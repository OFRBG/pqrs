"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"Overview","href":"/","docId":"overview"},{"type":"link","label":"Installation","href":"/installation","docId":"installation"},{"type":"link","label":"Demos","href":"/demos","docId":"demos"},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Field Lists","href":"/usage/list-of-fields","docId":"usage/1"},{"type":"link","label":"Fields with Arguments","href":"/usage/field-with-arguments","docId":"usage/2"},{"type":"link","label":"Field Lists with Arguments","href":"/usage/list-field-with-arguments","docId":"usage/3"},{"type":"link","label":"Query Variables","href":"/usage/query-variables","docId":"usage/4"},{"type":"link","label":"Commit Query","href":"/usage/commit-query","docId":"usage/6"},{"type":"link","label":"Without Handler","href":"/usage/without-handler","docId":"usage/99"}],"href":"/usage/"},{"type":"link","label":"API","href":"/api","docId":"api"}]},"docs":{"api":{"id":"api","title":"API","description":"Canonical Naming","sidebar":"sidebar"},"demos":{"id":"demos","title":"Demos","description":"Formidable Pokemon GraphQL Demo","sidebar":"sidebar"},"installation":{"id":"installation","title":"Installation","description":"React 17+ is a peer dependency. There is no need to install anything if React is already present. If React is not present in the project, use-pq won\'t be able to run.","sidebar":"sidebar"},"overview":{"id":"overview","title":"","description":"A hook to enable queryless GraphQL. Fetch exactly what you need and let the machines generate the payloads.","sidebar":"sidebar"},"usage/1":{"id":"usage/1","title":"Field Lists","description":"Lists of fields cannot be access by themselves. It is possible to declare a field as a field list by appending an _ to its key.","sidebar":"sidebar"},"usage/2":{"id":"usage/2","title":"Fields with Arguments","description":"Fields with arguments can be declared by accessing a key in bracket notation. It is also possible to provide arguments without string interpolation by using a $ prefix after the field that needs arguments. If the field is a list, the array _ prefix needs to be moved from the field name to the $ key.","sidebar":"sidebar"},"usage/3":{"id":"usage/3","title":"Field Lists with Arguments","description":"Combining the argument and list notation will return an array.","sidebar":"sidebar"},"usage/4":{"id":"usage/4","title":"Query Variables","description":"The with prop can be used on the root to build an argument list of GraphQL variables that can be provided by the client.","sidebar":"sidebar"},"usage/6":{"id":"usage/6","title":"Commit Query","description":"usePq relies on rerendering cycles to capture and commit fields that were accessed. If usePq is call in a parent component and passed down as a prop to a child, rerendering the child and not the parent will not trigger the commit. Invoking commitQuery forces a commit.","sidebar":"sidebar"},"usage/99":{"id":"usage/99","title":"Without Handler","description":"This feature is new and not fully tested.","sidebar":"sidebar"},"usage/usage":{"id":"usage/usage","title":"Usage","description":"In a component, call usePq and provide a query handler. You can then request fields to fetch by accessing keys from p.","sidebar":"sidebar"}}}')}}]);
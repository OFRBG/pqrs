"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[726],{9613:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>b});var n=t(9496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),b=a,f=d["".concat(u,".").concat(b)]||d[b]||p[b]||i;return t?n.createElement(f,o(o({ref:r},c),{},{components:t})):n.createElement(f,o({ref:r},c))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var u in r)hasOwnProperty.call(r,u)&&(s[u]=r[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5504:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(5443),a=(t(9496),t(9613));const i={id:4,sidebar_position:4,slug:"query-variables"},o="Query Variables",s={unversionedId:"usage/4",id:"usage/4",title:"Query Variables",description:"The with prop can be used on the root to build an argument list of GraphQL variables that can be provided by the client.",source:"@site/docs/usage/query-variables.md",sourceDirName:"usage",slug:"/usage/query-variables",permalink:"/usage/query-variables",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"4",sidebar_position:4,slug:"query-variables"},sidebar:"sidebar",previous:{title:"Field Lists with Arguments",permalink:"/usage/list-field-with-arguments"},next:{title:"Commit Query",permalink:"/usage/commit-query"}},u={},l=[],c={toc:l};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"query-variables"},"Query Variables"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"with")," prop can be used on the root to build an argument list of GraphQL variables that can be provided by the client."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"export function User({ limit, id }) {\n  const [p, q, { isLoading }] = usePq((query) => handler(query, variables: { id }))\n\n  const pForId = p.with({ $id: 'ID!' })\n\n  return (\n    <div>\n      {isLoading ? (\n        <span>loading...</span>\n      ) : (\n        <span>{pForId.user.$({ $id }))}</span>\n      )}\n    </div>\n  )\n}\n")))}p.isMDXComponent=!0}}]);